@page "/staffpage"
@using Microsoft.EntityFrameworkCore
@using FSD_Project.Domain
@using FSD_Project.Data
@using FSD_Project.Services

@implements IAsyncDisposable
@inject IDbContextFactory<FSD_ProjectContext> DbFactory
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Authorization
@inject NavigationManager Navigation
@inject TableService TableService



@attribute [Authorize(Roles = "Admin, Staff")]

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"> 
<link href="styles.css" rel="stylesheet"> <!-- Link to external CSS file --> 
<PageTitle> Staff Dashboard </PageTitle>

@* <head> *@
@*     <meta charset="UTF-8"> *@
@*     <meta name="viewport" content="width=device-width, initial-scale=1.0"> *@
@*     <title>Staff Dashboard</title> *@

@* </head> *@

    <div class="d-flex">
        <!-- Sidebar -->
        <div class="offcanvas offcanvas-start bg-dark text-white" tabindex="-1" id="sidebarMenu" aria-labelledby="sidebarMenuLabel">
            <div class="offcanvas-header">
                <h5 class="offcanvas-title" id="sidebarMenuLabel">Athens Admin</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="offcanvas" aria-label="Close"></button>
            </div>
            <div class="offcanvas-body">
                <ul class="navbar-nav">
                    <li class="nav-item"><a class="nav-link active" href="/staffpage">Home</a></li>

                    <!-- Dropdown for Reservation -->
                    <li class="nav-item">
                        <a class="nav-link dropdown-toggle" href="#" data-bs-toggle="collapse" data-bs-target="#reservationDropdown" aria-expanded="false">
                            Reservation
                        </a>
                        <ul class="collapse list-unstyled ms-3" id="reservationDropdown">
                            <li class="nav-item"><a class="nav-link" href="/reservations">View Reservations</a></li>
                            <li class="nav-item"><a class="nav-link" href="/reservations/create">Add Reservations</a></li>

                        </ul>
                    </li>

                    <!-- Dropdown for Customers -->
                    <li class="nav-item">
                        <a class="nav-link dropdown-toggle" href="#" data-bs-toggle="collapse" data-bs-target="#customersDropdown" aria-expanded="false">
                            Customers
                        </a>
                        <ul class="collapse list-unstyled ms-3" id="customersDropdown">
                            <li class="nav-item"><a class="nav-link" href="/customers">View Customers</a></li>
                            <li class="nav-item"><a class="nav-link" href="/customers/create">Add Customers</a></li>
                        </ul>
                    </li>

                    <!-- Dropdown for Staff -->
                    <li class="nav-item">
                        <a class="nav-link dropdown-toggle" href="#" data-bs-toggle="collapse" data-bs-target="#staffDropdown" aria-expanded="false">
                            Staffs
                        </a>
                        <ul class="collapse list-unstyled ms-3" id="staffDropdown">
                            <li class="nav-item"><a class="nav-link" href="/staff">View Staffs</a></li>
                            <li class="nav-item"><a class="nav-link" href="/staff/create">Add Staffs</a></li>
                        </ul>
                    </li>


                    <!-- Dropdown for Review -->
                    <li class="nav-item">
                        <a class="nav-link dropdown-toggle" href="#" data-bs-toggle="collapse" data-bs-target="#reviewDropdown" aria-expanded="false">
                            Reviews
                        </a>
                        <ul class="collapse list-unstyled ms-3" id="reviewDropdown">
                            <li class="nav-item"><a class="nav-link" href="/reviews">View Reviews</a></li>
                            <li class="nav-item"><a class="nav-link" href="/reviews/create">Add Reviews</a></li>
                        </ul>
                    </li>


                    <!-- Dropdown for Branch -->
                    <li class="nav-item">
                        <a class="nav-link dropdown-toggle" href="#" data-bs-toggle="collapse" data-bs-target="#branchDropdown" aria-expanded="false">
                            Branches
                        </a>
                        <ul class="collapse list-unstyled ms-3" id="branchDropdown">
                            <li class="nav-item"><a class="nav-link" href="/branches">View Branches</a></li>
                            <li class="nav-item"><a class="nav-link" href="/branches/create">Add Branches</a></li>
                        </ul>
                    </li>

                    <!-- Dropdown for Table -->
                    <li class="nav-item">
                        <a class="nav-link dropdown-toggle" href="#" data-bs-toggle="collapse" data-bs-target="#tableDropdown" aria-expanded="false">
                            Tables
                        </a>
                        <ul class="collapse list-unstyled ms-3" id="tableDropdown">
                            <li class="nav-item"><a class="nav-link" href="/tables">View Tables</a></li>
                            <li class="nav-item"><a class="nav-link" href="/tables/create">Add Tables</a></li>
                        </ul>
                    </li>




                    <li class="nav-item"><a class="nav-link" href="/">Webpage</a></li>
                </ul>
            </div>
        </div>

        <!-- Main Content -->
        <div class="container mt-5">
            <div class="row">
                <div class="col-md-12 text-center mb-4">
                    <button class="btn btn-dark mb-3" type="button" data-bs-toggle="offcanvas" data-bs-target="#sidebarMenu" aria-controls="sidebarMenu">
                        Toggle Sidebar
                    </button>
                    <h1 class="display-6">Staff Dashboard</h1>
                    <p class="text-muted">Manage reservations and view updates.</p>
                </div>
            </div>

            <div class="row mb-3">
                <div class="reservation-list">
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-header bg-primary text-white">
                                <h5>Reservations List</h5>
                            </div>
                            <div class="card-body">
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th style="width: 1%;">Reservation ID</th>
                                            <th style="width: 1%;">Customer ID</th>
                                            <th style="width: 1%;">Customer Name</th>
                                            <th style="width: 1%;">Branch Name</th>
                                            <th style="width: 2%;">Reserved Date</th>
                                            <th style="width: 1%;">Table Number</th>
                                            <th style="width: 1%;">Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (reservations == null || reservations.Count == 0)
                                        {
                                            <tr>
                                                <td colspan="6" class="text-center text-muted">No reservations available.</td>
                                            </tr>
                                        }
                                        else
                                        {
                                            @foreach (var reservation in reservations)
                                            {
                                                <tr>
                                                    <td>@reservation.Id</td>
                                                    <td>@reservation.CustomerId</td>
                                                    <td>@GetBranchName(reservation.TableID)</td>
                                                    <td>@reservation.CreatedBy</td>
                                                    <td>@reservation.ReservedDateTime.ToString("f")</td>
                                                    <td>@reservation.TableID</td>
                                                    <td>
                                                        <a href="@($"reservations/edit?id={reservation.Id}")">Edit</a> |
                                                        <a href="@($"reservations/details?id={reservation.Id}")">Details</a> |
                                                        <a href="@($"reservations/delete?id={reservation.Id}")">Delete</a>
                                                    </td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>   
            </div>

            <div class="col-md-6 table-availability">
                <div class="card">
                    <div class="card-header bg-success text-white">
                        <h5>Table Availability</h5>
                    </div>
                    <div class="card-body">
                        <div class="progress mb-3">
                            <div class="progress-bar bg-success" role="progressbar" style="width: @availabilityPercentage%;" aria-valuenow="@availabilityPercentage" aria-valuemin="0" aria-valuemax="100">
                                @availabilityPercentage.ToString("F1")% Available
                            </div>
                        </div>
                        <p class="text-muted">Total Tables: @totalTables</p>
                        <p class="text-muted">Available Tables: @availableTables</p>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 action">
                    <div class="card">
                        <div class="card-header bg-danger text-white">
                            <h5>Actions</h5>
                        </div>
                        <div class="card-body d-flex justify-content-around align-items-center">
                            <button class="btn btn-primary me-2" onclick="window.location.href='/reservations/create'">Add Reservation</button>
                            <button class="btn btn-secondary me-2" onclick="window.location.href='/tables'">Update Table Status</button>
                            <button class="btn btn-danger" onclick="window.location.href='/Logout'">Logout</button>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

    <div class="disclaimers">
        <div>
            <h2>Disclaimer</h2> <br />
            <ul>
                <li> All employees are encouraged to refresh when navigating to a new page. (Ctrl + R) to reload the page</li>
                <li> Certain pages are not accessible to staff. Only Admins/Managers can access them. </li>
            </ul>
        </div>
    </div>


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const toggleButton = document.querySelector('button[data-bs-target="#sidebarMenu"]');
            const sidebar = document.getElementById('sidebarMenu');

            sidebar.addEventListener('shown.bs.offcanvas', () => {
                toggleButton.style.visibility = 'hidden';
            });

            sidebar.addEventListener('hidden.bs.offcanvas', () => {
                toggleButton.style.visibility = 'visible';
            });
        });
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>



@code {
    private List<Reservation> reservations = new();
    private FSD_ProjectContext context = default!;
    private int totalTables;
    private int availableTables;
    private double availabilityPercentage;


    // Fetch reservations from the database on initialization
    protected override async Task OnInitializedAsync()
    {
        var tableAvailability = await TableService.GetTableAvailabilityAsync();
        totalTables = tableAvailability.TotalTables;
        availableTables = tableAvailability.AvailableTables;
        availabilityPercentage = tableAvailability.AvailabilityPercentage;

        context = await DbFactory.CreateDbContextAsync();
        reservations = await context.Reservation
            .OrderBy(r => r.ReservedDateTime)
            .ToListAsync();
    }

    // Navigate to the Create Reservation page
    private void NavigateToCreateReservation()
    {
        Navigation.NavigateTo("/reservations/create");
    }

    // Navigate to the Edit Reservation page with the reservation ID
    private void NavigateToEditReservation(int reservationId)
    {
        Navigation.NavigateTo($"/reservations/edit/{reservationId}");
    }

    // Delete a reservation by ID
    private async Task DeleteReservation(int reservationId)
    {
        var reservation = await context.Reservation.FindAsync(reservationId);
        if (reservation != null)
        {
            context.Reservation.Remove(reservation);
            await context.SaveChangesAsync();

            // Refresh the list after deletion
            reservations = await context.Reservation.ToListAsync();
        }
    }

    private string GetBranchName(int tableId)
    {
        // TableID 1-5 -> Branch 1, TableID 6-10 -> Branch 2
        if (tableId >= 1 && tableId <= 5)
        {
            return "The Shoppes at Marina Bay Sands";
        }
        else if (tableId >= 6 && tableId <= 10)
        {
            return "Jewel at Changi Airport";
        }
        else
        {
            return "Unknown Branch"; // In case of unexpected tableId
        }
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
