@page "/Account/RegisterConfirmation"

@using System.Text
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using FSD_Project.Data

@inject UserManager<FSD_ProjectUser> UserManager
@inject IEmailSender<FSD_ProjectUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Register Confirmation</PageTitle>

<div class="confirmation-container">
    <h1 class="title">Registration Confirmation</h1>

    @if (emailConfirmationLink is not null)
    {
        <div class="confirmation-message">
            <p>
                Please check your email for a registration confirmation.
            </p>
            
        </div>
        <div class="manual-redirect">
            <p>If you have already confirmed your email, click the button below to go to the login page:</p>
            <button class="redirect-button" @onclick="RedirectToLogin">Go to Login</button>
        </div>
    }
    else
    {
        <div class="email-prompt">
            <p>Please check your email inbox for a confirmation link to activate your account.</p>
        </div>
    }
</div>

<style>
    .confirmation-container {
        max-width: 600px;
        margin: 50px auto;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 8px;
        background-color: #f9f9f9;
        font-family: Arial, sans-serif;
    }

    .title {
        text-align: center;
        font-size: 24px;
        color: #333;
    }

    .confirmation-message, .email-prompt, .manual-redirect {
        text-align: center;
        margin-top: 20px;
    }

    .confirmation-link {
        display: inline-block;
        margin-top: 10px;
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        text-decoration: none;
        border-radius: 4px;
    }

        .confirmation-link:hover {
            background-color: #0056b3;
        }

    .redirect-button {
        margin-top: 10px;
        padding: 10px 20px;
        background-color: #28a745;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

        .redirect-button:hover {
            background-color: #218838;
        }
</style>

@code {
    private string? emailConfirmationLink;
    private string? statusMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? Email { get; set; }

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Email is null)
        {
            RedirectManager.RedirectTo("");
        }

        var user = await UserManager.FindByEmailAsync(Email);
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            statusMessage = "Error finding user for unspecified email";
        }
        else if (EmailSender is IdentityNoOpEmailSender)
        {
            // Generate email confirmation link
            var userId = await UserManager.GetUserIdAsync(user);
            var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
            code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
            emailConfirmationLink = NavigationManager.GetUriWithQueryParameters(
                NavigationManager.ToAbsoluteUri("Account/ConfirmEmail").AbsoluteUri,
                new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code, ["returnUrl"] = ReturnUrl ?? "/Login" });
        }
    }

    private void RedirectToLogin()
    {
        NavigationManager.NavigateTo("/Login");
    }
}
